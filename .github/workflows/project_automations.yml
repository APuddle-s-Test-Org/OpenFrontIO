name: Project automations

on:
  workflow_dispatch:
  #issues:
  #pull_request_review:
    #types: [submitted, edited]

jobs:
  pr-review-requested-changes:
    name: pr-changes-requested
    runs-on: ubuntu-latest
    # if: github.event_name == 'pull_request_review' && (github.event.action == 'submitted' || github.event.action == 'edited') && github.event.review.state == 'changes_requested'
    steps:
      - name: Get project data
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          ORGANIZATION: "OpenFrontIO"
          USER: "APuddle210"
          PROJECT_NUMBER: 1
        run: |
          gh api graphql -f query='
            query($user: String! $proj_num: Int!) {
              user(login: $user){
                projectV2(number: $proj_num) {
                  id
                  fields (first: 30) {
                    nodes{
                      ... on ProjectV2Field {
                        id
                        name
                      }
                      ... on ProjectV2SingleSelectField {
                        id
                        name
                        options {
                          id
                          name
                          }
                      }
                    }
                  }
                }
              }
            }' -f user=$USER -F proj_num=$PROJECT_NUMBER > project_data.json
          echo 'PROJECT_ID='$(jq '.data.organization.projectV2.id' project_data.json) >> $GITHUB_ENV
          echo 'FINAL_REVIEW_FLAG_ID='$(jq '.data.organization.projectV2.fields.nodes[] | select(.name== "Final Review - Flag") | .id' project_data.json) >> $GITHUB_ENV
          echo 'RETURNED_OPTION_ID='$(jq '.data.organization.projectV2.fields.nodes[] | select(.name== "Final Review - Flag") | .options[] | select(.name=="Returned for Changes") |.id' project_data.json) >> $GITHUB_ENV
          echo 'LINKED_PR_FIELD_ID='$(jq '.data.organization.projectV2.fields.nodes[] | select(.name== "Linked pull requests") | .id' project_data.json) >> $GITHUB_ENV
