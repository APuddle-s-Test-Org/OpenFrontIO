name: Project automations

on:
  workflow_dispatch:
  #issues:
  #pull_request_review:
    #types: [submitted, edited]
    
env:
  #PR_REVIEW_ID: ${{github.event.pull_request_review.review.node_id}}
  #PR_REVIEW_ID: ""
  GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
  ORGANIZATION: "OpenFrontIO"
  USER: "APuddle210"
  PROJECT_NUMBER: 3

jobs:
  final-review-changes-requested:
    name: final-review-changes-requested
    runs-on: ubuntu-latest
    # if: ${{ github.event_name == 'pull_request_review' && (github.event.action == 'submitted' || github.event.action == 'edited') && github.event.review.state == 'changes_requested' }}
    steps:
      - name: Get-project-data
        run: |
          gh api graphql -f query='
            query($organization: String! $proj_num: Int!) {
              organization(login: $organization) {
                projectV2(number: $proj_num) {
                  id
                  fields (first: 30) {
                    nodes {
                      ... on ProjectV2Field {
                        id
                        name
                      }
                      ... on ProjectV2SingleSelectField {
                        id
                        name
                        options {
                          id
                          name
                        }
                      }
                    }
                  }
                  items {
                    nodes {
                      id
                      fieldValues(first: 30) {
                        nodes {
                          ... on ProjectV2ItemFieldPullRequestValue {
                            pullRequests(last: 1) {
                              nodes {
                                id
                                reviews(last: 20) {
                                  nodes {
                                    author {
                                      login
                                    }
                                    state
                                  }
                                }
                              }
                            }
                            field {
                              ... on ProjectV2Field {
                                id
                                name
                              }
                            }
                          }
                          ... on ProjectV2ItemFieldSingleSelectValue {
                            id
                            optionId
                            field {
                              ... on ProjectV2SingleSelectField {
                                id
                                name
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }' -f organization=${{env.ORGANIZATION}} -F proj_num=${{env.PROJECT_NUMBER}} > project_data.json
          echo 'PROJECT_ID='$(jq '.data.organization.projectV2.id' project_data.json) >> $GITHUB_ENV
          
          echo 'STATUS_FIELD_ID='$(jq '.data.organization.projectV2.fields.nodes[] | select(.name== "Status") | .id' project_data.json) >> $GITHUB_ENV
          echo 'FINAL_REVIEW_OPTION_ID='$(jq '.data.organization.projectV2.fields.nodes[] | select(.name== "Status") | .options[] | select(.name=="Final Review") |.id' project_data.json) >> $GITHUB_ENV
          
          echo 'FINAL_REVIEW_FIELD_ID='$(jq '.data.organization.projectV2.fields.nodes[] | select(.name== "Final Review - Flag") | .id' project_data.json) >> $GITHUB_ENV
          echo 'RETURNED_OPTION_ID='$(jq '.data.organization.projectV2.fields.nodes[] | select(.name== "Final Review - Flag") | .options[] | select(.name=="Returned for Changes") |.id' project_data.json) >> $GITHUB_ENV
          
          echo 'LINKED_PR_FIELD_ID='$(jq '.data.organization.projectV2.fields.nodes[] | select(.name== "Linked pull requests") | .id' project_data.json) >> $GITHUB_ENV
          echo 'LINKED_PR__ID='$(jq '.data.organization.projectV2.fields.nodes[] | select(.name== "Linked pull requests") | .id' project_data.json) >> $GITHUB_ENV
          echo 'PM_ITEM_ID='$(jq '.data.organization.projectV2.items.nodes[] | select(.id== "PVTI_lADOC2jf2s4A2aRCzgZTfSc") | .id' project_data.json) >> $GITHUB_ENV
